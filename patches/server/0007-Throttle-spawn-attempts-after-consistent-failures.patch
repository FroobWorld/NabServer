From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: froobynooby <froobynooby@froobworld.com>
Date: Sat, 12 Aug 2023 16:19:59 +0930
Subject: [PATCH] Throttle spawn attempts after consistent failures


diff --git a/src/main/java/net/minecraft/world/level/NaturalSpawner.java b/src/main/java/net/minecraft/world/level/NaturalSpawner.java
index 661acdf4b1f33d150b0caf179e925d3162d7be35..1819e2fbbd3c384e461e147d3097ff324bdd0cb6 100644
--- a/src/main/java/net/minecraft/world/level/NaturalSpawner.java
+++ b/src/main/java/net/minecraft/world/level/NaturalSpawner.java
@@ -144,9 +144,10 @@ public final class NaturalSpawner {
             // CraftBukkit start - Use per-world spawn limits
             boolean spawnThisTick = true;
             int limit = enumcreaturetype.getMaxInstancesPerChunk();
+            int spawnRateMultiplier = chunk.failedSpawnAttempts.getOrDefault(enumcreaturetype, 0) > 1200 ? 10 : 1; // Nabulus
             SpawnCategory spawnCategory = CraftSpawnCategory.toBukkit(enumcreaturetype);
             if (CraftSpawnCategory.isValidForLimits(spawnCategory)) {
-                spawnThisTick = world.ticksPerSpawnCategory.getLong(spawnCategory) != 0 && worlddata.getGameTime() % world.ticksPerSpawnCategory.getLong(spawnCategory) == 0;
+                spawnThisTick = world.ticksPerSpawnCategory.getLong(spawnCategory) != 0 && worlddata.getGameTime() % (world.ticksPerSpawnCategory.getLong(spawnCategory) * spawnRateMultiplier) == 0; // Nabulus
                 limit = world.getWorld().getSpawnLimit(spawnCategory);
             }
 
@@ -183,6 +184,13 @@ public final class NaturalSpawner {
                     difference, world.paperConfig().entities.spawning.perPlayerMobSpawns ? world.getChunkSource().chunkMap::updatePlayerMobTypeMap : null);
                 info.mobCategoryCounts.mergeInt(enumcreaturetype, spawnCount, Integer::sum);
                 // Paper end - Optional per player mob spawns
+                // Nabulus start
+                if (spawnCount == 0) {
+                    chunk.failedSpawnAttempts.compute(enumcreaturetype, (k, v) -> (v == null ? 0 : v) + 1);
+                } else {
+                    chunk.failedSpawnAttempts.put(enumcreaturetype, 0);
+                }
+                // Nabulus end
             }
         }
 
diff --git a/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java b/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java
index 922191159fadf8e89646d7299aadee4aa851f71a..c78aae30d7b701aa0e520618166870647988ccf3 100644
--- a/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java
+++ b/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java
@@ -85,6 +85,7 @@ public class LevelChunk extends ChunkAccess {
     private final LevelChunkTicks<Block> blockTicks;
     private final LevelChunkTicks<Fluid> fluidTicks;
     public volatile FullChunkStatus chunkStatus = FullChunkStatus.INACCESSIBLE; // Paper - rewrite chunk system
+    public final Map<net.minecraft.world.entity.MobCategory, Integer> failedSpawnAttempts = new java.util.EnumMap<>(net.minecraft.world.entity.MobCategory.class); // Nabulus
 
     // Pufferfish start - instead of using a random every time the chunk is ticked, define when lightning strikes preemptively
     private int lightningTick;
