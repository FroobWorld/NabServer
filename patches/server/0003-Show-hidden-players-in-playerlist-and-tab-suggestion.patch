From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: froobynooby <froobynooby@froobworld.com>
Date: Tue, 1 Mar 2022 19:44:48 +0930
Subject: [PATCH] Show hidden players in playerlist and tab suggestions


diff --git a/src/main/java/net/minecraft/server/commands/ListPlayersCommand.java b/src/main/java/net/minecraft/server/commands/ListPlayersCommand.java
index a0614ca229de8c6e34a48c4c125e6e7665249d96..a9d93ccf6aec709f26cf5e8f5b06497d593f37b4 100644
--- a/src/main/java/net/minecraft/server/commands/ListPlayersCommand.java
+++ b/src/main/java/net/minecraft/server/commands/ListPlayersCommand.java
@@ -40,7 +40,7 @@ public class ListPlayersCommand {
         // CraftBukkit start
         if (source.getBukkitSender() instanceof org.bukkit.entity.Player) {
             org.bukkit.entity.Player sender = (org.bukkit.entity.Player) source.getBukkitSender();
-            list = list.stream().filter((ep) -> sender.canSee(ep.getBukkitEntity())).collect(java.util.stream.Collectors.toList());
+            //list = list.stream().filter((ep) -> sender.canSee(ep.getBukkitEntity())).collect(java.util.stream.Collectors.toList()); // Nabulus
         }
         // CraftBukkit end
         Component ichatbasecomponent = ComponentUtils.formatList(list, nameProvider);
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 25603c57817a1965e387cf62bc58ed45723fac2c..ab911590dd3526ab238d54955ca62f419218b1a5 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -382,11 +382,11 @@ public abstract class PlayerList {
         for (int i = 0; i < this.players.size(); ++i) {
             ServerPlayer entityplayer1 = (ServerPlayer) this.players.get(i);
 
-            if (entityplayer1.getBukkitEntity().canSee(bukkitPlayer)) {
+            if (entityplayer1.getBukkitEntity().canSee(bukkitPlayer) || true) { // Nabulus
                 entityplayer1.connection.send(packet);
             }
 
-            if (!bukkitPlayer.canSee(entityplayer1.getBukkitEntity())) {
+            if (!bukkitPlayer.canSee(entityplayer1.getBukkitEntity()) && false) { // Nabulus
                 continue;
             }
 
@@ -692,6 +692,7 @@ public abstract class PlayerList {
             if (entityplayer2.getBukkitEntity().canSee(entityplayer.getBukkitEntity())) {
                 entityplayer2.connection.send(packet);
             } else {
+                entityplayer2.connection.send(packet); // Nabulus
                 entityplayer2.getBukkitEntity().onEntityRemove(entityplayer);
             }
         }
@@ -1031,7 +1032,7 @@ public abstract class PlayerList {
                 target.connection.send(new ClientboundPlayerInfoPacket(ClientboundPlayerInfoPacket.Action.UPDATE_LATENCY, this.players.stream().filter(new Predicate<ServerPlayer>() {
                     @Override
                     public boolean apply(ServerPlayer input) {
-                        return target.getBukkitEntity().canSee(input.getBukkitEntity());
+                        return target.getBukkitEntity().canSee(input.getBukkitEntity()) || true; // Nabulus
                     }
                 }).collect(Collectors.toList())));
             }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index f56ce5263741c38dd568a522008b75cbf96deacf..1781853ecac7d2e801f8f59cffdbb21e92459266 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -2229,7 +2229,7 @@ public final class CraftServer implements Server {
         PlayerChatTabCompleteEvent event = new PlayerChatTabCompleteEvent(player, message, completions);
         String token = event.getLastToken();
         for (Player p : this.getOnlinePlayers()) {
-            if (player.canSee(p) && StringUtil.startsWithIgnoreCase(p.getName(), token)) {
+            if (StringUtil.startsWithIgnoreCase(p.getName(), token)) { // Nabulus - remove canSee check
                 completions.add(p.getName());
             }
         }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 603e9234294c01f1cde4bfc0b0053e69b99861d9..85f3de2cee68bd39e7f56549713265cdf9b562ff 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -410,7 +410,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public void playerListName(net.kyori.adventure.text.Component name) {
         getHandle().listName = name == null ? null : io.papermc.paper.adventure.PaperAdventure.asVanilla(name);
         for (ServerPlayer player : server.getHandle().players) {
-            if (player.getBukkitEntity().canSee(this)) {
+            if (player.getBukkitEntity().canSee(this) || true) { // Nabulus
                 player.connection.send(new ClientboundPlayerInfoPacket(ClientboundPlayerInfoPacket.Action.UPDATE_DISPLAY_NAME, getHandle()));
             }
         }
@@ -440,7 +440,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         }
         this.getHandle().listName = name.equals(getName()) ? null : CraftChatMessage.fromStringOrNull(name);
         for (ServerPlayer player : (List<ServerPlayer>) server.getHandle().players) {
-            if (player.getBukkitEntity().canSee(this)) {
+            if (player.getBukkitEntity().canSee(this) || true) { // Nabulus
                 player.connection.send(new ClientboundPlayerInfoPacket(ClientboundPlayerInfoPacket.Action.UPDATE_DISPLAY_NAME, this.getHandle()));
             }
         }
@@ -2130,13 +2130,13 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         }
         // Paper end
     }
-    
+
     @Override
     public void sendHealthUpdate() {
         this.sendHealthUpdate(this.getScaledHealth(), this.getHandle().getFoodData().getFoodLevel(), this.getHandle().getFoodData().getSaturationLevel());
     }
     // Paper end
-    
+
     public void injectScaledMaxHealth(Collection<AttributeInstance> collection, boolean force) {
         if (!this.scaledHealth && !force) {
             return;
