From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: froobynooby <froobynooby@froobworld.com>
Date: Sun, 27 Feb 2022 21:27:01 +0930
Subject: [PATCH] Separate creative levels


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index a6edf5117d4ae03d8294e7bb74dd2d77048895a5..ba6490e0d3d5ae78bc7d77176dda3e1688ec80e3 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -555,6 +555,7 @@ public class ServerPlayer extends Player {
             this.setPosRaw(position.x(), position.y(), position.z()); // Paper - don't register to chunks yet
         }
         this.gameMode.setLevel((ServerLevel) world);
+        this.chooseInventory(); // Nabulus
     }
     // CraftBukkit end
 
@@ -1148,6 +1149,7 @@ public class ServerPlayer extends Player {
 
                 // CraftBukkit end
                 this.setLevel(worldserver);
+                this.chooseInventory(); // Nabulus
                 worldserver.addDuringPortalTeleport(this);
                 this.connection.teleport(exit); // CraftBukkit - use internal teleport without event
                 this.connection.resetPosition(); // CraftBukkit - sync position after changing it (from PortalTravelAgent#findAndteleport)
@@ -1725,8 +1727,18 @@ public class ServerPlayer extends Player {
     }
 
     public void restoreFrom(ServerPlayer oldPlayer, boolean alive) {
+        // Nabulus start
+        this.restoreFrom(oldPlayer, alive, false);
+    }
+    public void restoreFrom(ServerPlayer oldPlayer, boolean alive, boolean toOrFromCreativeLevel) {
+        // Nabulus end
         this.textFilteringEnabled = oldPlayer.textFilteringEnabled;
         this.gameMode.setGameModeForPlayer(oldPlayer.gameMode.getGameModeForPlayer(), oldPlayer.gameMode.getPreviousGameModeForPlayer());
+        // Nabulus start
+        this.normalInventory.replaceWith(oldPlayer.normalInventory);
+        this.creativeLevelInventory.replaceWith(oldPlayer.creativeLevelInventory);
+        this.usingNormalInventory = oldPlayer.usingNormalInventory;
+        // Nabulus end
         if (alive) {
             this.getInventory().replaceWith(oldPlayer.getInventory());
             this.setHealth(oldPlayer.getHealth());
@@ -1753,6 +1765,7 @@ public class ServerPlayer extends Player {
         // this.recipeBook.copyOverData(entityplayer.recipeBook); // CraftBukkit
         this.seenCredits = oldPlayer.seenCredits;
         this.enteredNetherPosition = oldPlayer.enteredNetherPosition;
+        if (toOrFromCreativeLevel) return; // Nabulus
         this.setShoulderEntityLeft(oldPlayer.getShoulderEntityLeft());
         this.setShoulderEntityRight(oldPlayer.getShoulderEntityRight());
     }
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 624946f48f0811c94d05174f28d0b1fc6d5e6a00..ff62155be56c0f9a02f81bd0873f93149e56fdfb 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -853,8 +853,15 @@ public abstract class PlayerList {
         entityplayer.wonGame = false;
         // CraftBukkit end
 
+        // Nabulus start
+        boolean toOrFromCreativeLevel = ((net.minecraft.world.level.storage.PrimaryLevelData) worldserver.levelData).creativeLevel || ((net.minecraft.world.level.storage.PrimaryLevelData) entityplayer.level.levelData).creativeLevel;
+        if (toOrFromCreativeLevel) {
+            entityplayer.releaseLeftShoulderEntity();
+            entityplayer.releaseRightShoulderEntity();
+        }
+        // Nabulus end
         entityplayer1.connection = entityplayer.connection;
-        entityplayer1.restoreFrom(entityplayer, flag);
+        entityplayer1.restoreFrom(entityplayer, flag, toOrFromCreativeLevel); // Nabulus
         entityplayer1.setId(entityplayer.getId());
         entityplayer1.setMainArm(entityplayer.getMainArm());
         Iterator iterator = entityplayer.getTags().iterator();
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index dfd1f37757af1bd808cc2e2d8bf97123adf638bb..4872e168784e56c593462cf6d3bca361d5a2f8cf 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -2286,6 +2286,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 // Paper end - Move player to spawn point if spawn in unloaded world
 
                 ((ServerPlayer) this).setLevel(bworld == null ? null : ((CraftWorld) bworld).getHandle());
+                ((ServerPlayer) this).chooseInventory(); // Nabulus
             }
             this.getBukkitEntity().readBukkitValues(nbt);
             if (nbt.contains("Bukkit.invisible")) {
@@ -3222,6 +3223,11 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         }
         // Paper end
         if (this.level instanceof ServerLevel && !this.isRemoved()) {
+            // Nabulus start
+            if (!this.level.equals(worldserver) && ((net.minecraft.world.level.storage.PrimaryLevelData) this.level.levelData).creativeLevel) {
+                return null;
+            }
+            // Nabulus end
             this.level.getProfiler().push("changeDimension");
             // CraftBukkit start
             // this.decouple();
@@ -3307,6 +3313,11 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         if (destination == null) {
             return null;
         }
+        // Nabulus start
+        if (((net.minecraft.world.level.storage.PrimaryLevelData) this.level.levelData).creativeLevel) {
+            return null;
+        }
+        // Nabulus end
         boolean flag = this.level.getTypeKey() == LevelStem.END && destination.getTypeKey() == LevelStem.OVERWORLD; // fromEndToOverworld
         boolean flag1 = destination.getTypeKey() == LevelStem.END; // targetIsEnd
         // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 2483d7df7f1bf94344afd38b37602c645a4a2dff..d2159874f6e61466004cdb16e9f2a592ec7b1670 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -192,12 +192,47 @@ public abstract class Player extends LivingEntity {
     }
     // CraftBukkit end
 
+    // Nabulus start
+    protected final Inventory normalInventory = new Inventory(this);
+    protected final Inventory creativeLevelInventory = new Inventory(this);
+    private boolean inventoriesLoaded = false;
+    public boolean usingNormalInventory = true;
+
+    public void chooseInventory() {
+        if (!inventoriesLoaded) {
+            return;
+        }
+        if (((net.minecraft.world.level.storage.PrimaryLevelData)this.level.levelData).creativeLevel) {
+            if (usingNormalInventory) {
+                this.normalInventory.replaceWith(this.inventory);
+                this.inventory.replaceWith(this.creativeLevelInventory);
+                usingNormalInventory = false;
+            }
+        } else {
+            if (!usingNormalInventory) {
+                this.creativeLevelInventory.replaceWith(this.inventory);
+                this.inventory.replaceWith(this.normalInventory);
+                usingNormalInventory = true;
+            }
+        }
+    }
+
+    public Inventory getNormalInventory() {
+        return usingNormalInventory ? this.inventory : this.normalInventory;
+    }
+
+    public Inventory getCreativeLevelInventory() {
+        return usingNormalInventory ? this.creativeLevelInventory : this.inventory;
+    }
+    // Nabulus end
+
     public Player(Level world, BlockPos pos, float yaw, GameProfile profile) {
         super(EntityType.PLAYER, world);
         this.lastItemInMainHand = ItemStack.EMPTY;
         this.cooldowns = this.createItemCooldowns();
         this.setUUID(Player.createPlayerUUID(profile));
         this.gameProfile = profile;
+        this.chooseInventory(); // Nabulus
         this.inventoryMenu = new InventoryMenu(this.inventory, !world.isClientSide, this);
         this.containerMenu = this.inventoryMenu;
         this.moveTo((double) pos.getX() + 0.5D, (double) (pos.getY() + 1), (double) pos.getZ() + 0.5D, yaw, 0.0F);
@@ -848,6 +883,16 @@ public abstract class Player extends LivingEntity {
 
         this.inventory.load(nbttaglist);
         this.inventory.selected = nbt.getInt("SelectedItemSlot");
+        // Nabulus start
+        this.normalInventory.load(nbttaglist);
+        this.normalInventory.selected = nbt.getInt("SelectedItemSlot");
+
+        ListTag creativeLevelInventoryTagList = nbt.getList("Nabulus.CreativeLevelInventory", 10);
+        this.creativeLevelInventory.load(creativeLevelInventoryTagList);
+        this.creativeLevelInventory.selected = nbt.getInt("Nabulus.CreativeLevelSelectedItemSlot");
+        this.inventoriesLoaded = true;
+        this.usingNormalInventory = true;
+        // Nabulus end
         this.sleepCounter = nbt.getShort("SleepTimer");
         this.experienceProgress = nbt.getFloat("XpP");
         this.experienceLevel = nbt.getInt("XpLevel");
@@ -879,8 +924,12 @@ public abstract class Player extends LivingEntity {
     public void addAdditionalSaveData(CompoundTag nbt) {
         super.addAdditionalSaveData(nbt);
         nbt.putInt("DataVersion", SharedConstants.getCurrentVersion().getWorldVersion());
-        nbt.put("Inventory", this.inventory.save(new ListTag()));
-        nbt.putInt("SelectedItemSlot", this.inventory.selected);
+        nbt.put("Inventory", this.getNormalInventory().save(new ListTag())); // Nabulus
+        nbt.putInt("SelectedItemSlot", this.getNormalInventory().selected); // Nabulus
+        // Nabulus start
+        nbt.put("Nabulus.CreativeLevelInventory", this.getCreativeLevelInventory().save(new ListTag()));
+        nbt.putInt("Nabulus.CreativeLevelSelectedItemSlot", this.getCreativeLevelInventory().selected);
+        // Nabulus end
         nbt.putShort("SleepTimer", (short) this.sleepCounter);
         nbt.putFloat("XpP", this.experienceProgress);
         nbt.putInt("XpLevel", this.experienceLevel);
diff --git a/src/main/java/net/minecraft/world/level/storage/LevelStorageSource.java b/src/main/java/net/minecraft/world/level/storage/LevelStorageSource.java
index 812c3ce2228a51ed4cce0d8dcc1b8aebdf8297e0..eceae5b126eff7c6abb133f6803fa52a7cd9ca67 100644
--- a/src/main/java/net/minecraft/world/level/storage/LevelStorageSource.java
+++ b/src/main/java/net/minecraft/world/level/storage/LevelStorageSource.java
@@ -235,6 +235,7 @@ public class LevelStorageSource {
                 // CraftBukkit start - Add PDC to world
                 PrimaryLevelData worldDataServer = PrimaryLevelData.parse(dynamic, datafixer, i, nbttagcompound2, worldsettings, levelversion, (WorldGenSettings) pair.getFirst(), lifecycle1);
                 worldDataServer.pdc = nbttagcompound1.get("BukkitValues");
+                worldDataServer.creativeLevel = nbttagcompound1.getBoolean("Nabulus.CreativeLevel"); // Nabulus
                 return worldDataServer;
                 // CraftBukkit end
             } catch (Exception exception) {
diff --git a/src/main/java/net/minecraft/world/level/storage/PrimaryLevelData.java b/src/main/java/net/minecraft/world/level/storage/PrimaryLevelData.java
index 95635cc7367b757d149bb2c81326a041f84782f0..333edc0421633652dc1c0011a28773d188f0eec7 100644
--- a/src/main/java/net/minecraft/world/level/storage/PrimaryLevelData.java
+++ b/src/main/java/net/minecraft/world/level/storage/PrimaryLevelData.java
@@ -90,6 +90,7 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
     // CraftBukkit start - Add world and pdc
     private ServerLevel world;
     protected Tag pdc;
+    public boolean creativeLevel;
 
     public void setWorld(ServerLevel world) {
         if (this.world != null) {
@@ -229,6 +230,7 @@ public class PrimaryLevelData implements ServerLevelData, WorldData {
 
         levelNbt.putString("Bukkit.Version", Bukkit.getName() + "/" + Bukkit.getVersion() + "/" + Bukkit.getBukkitVersion()); // CraftBukkit
         this.world.getWorld().storeBukkitValues(levelNbt); // CraftBukkit - add pdc
+        levelNbt.putBoolean("Nabulus.CreativeLevel", this.creativeLevel); // Nabulus
     }
 
     @Override
